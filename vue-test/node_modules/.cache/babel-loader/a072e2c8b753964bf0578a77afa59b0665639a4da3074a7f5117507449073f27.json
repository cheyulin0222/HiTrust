{"ast":null,"code":"import { genNonDuplicateID } from \"@/utils/util\";\nexport default {\n  data() {\n    return {};\n  },\n  props: {\n    //有值就會顯示標題(Label)\n    LabelVal: {\n      type: String\n    },\n    //必填\n    ID: {\n      type: String\n    },\n    //會抓input[ID]的值,雙向綁定\n    input: {\n      type: Object\n    },\n    //顯示錯誤值\n    invalids: {\n      type: Object\n    },\n    // 目前:number/text\n    type: {\n      type: String\n    },\n    // input的class ,會全部替換,沒帶有預設CLASS\n    inputClass: {\n      type: String\n    },\n    // input的style ,會全部替換,沒帶有預設style\n    inputStyle: {\n      type: String\n    },\n    //是否唯讀 true/false\n    readOnly: {\n      type: Boolean\n    },\n    required: {\n      type: Boolean\n    },\n    tooltip: {\n      type: String\n    },\n    placeholder: {\n      type: String\n    },\n    IDRandom: {\n      type: Boolean\n    },\n    maxlength: {\n      type: String\n    },\n    modelValue: {\n      type: [String, Number]\n    },\n    canSelect: {\n      type: Boolean\n    }\n  },\n  emits: [\"clickFunc\", \"update:modelValue\", \"cickUpFunc\"],\n  components: {},\n  mounted() {},\n  watch: {\n    modelValue(newVal, oldVal) {\n      this.$emit('update:modelValue', newVal);\n    }\n  },\n  computed: {\n    getType() {\n      if (!!this.type) {\n        return this.type;\n      } else {\n        return \"text\";\n      }\n    },\n    getInputClass() {\n      let className;\n      if (this.inputClass) {\n        className = this.inputClass;\n      } else {\n        if (this.type === \"file\") {\n          className = \"form-control border-0\";\n        } else {\n          className = \"form-control text-left  border-0\";\n          if (!this.readOnly) {\n            className += \" bg-white\";\n          }\n        }\n      }\n      if (this.getInvalidsTxt != \"\") {\n        className += \" is-invalid\";\n      }\n      return className;\n    },\n    getLabelClass() {\n      if (this.required) {\n        return 'required';\n      }\n    },\n    getInputID() {\n      let ID = this.ID;\n      if (ID) {\n        let IDs = ID.split(\".\");\n        if (IDs.length > 1) {\n          ID = IDs[IDs.length - 1];\n        }\n        return ID;\n      } else {\n        return genNonDuplicateID();\n      }\n    },\n    getInvalidsTxt() {\n      let ID = this.getInputID;\n      if (this.invalids && !!this.invalids[ID]) {\n        return this.invalids[ID];\n      } else {\n        return \"\";\n      }\n    },\n    showLable() {\n      let show = !!this.LabelVal;\n      return show;\n    },\n    getID() {\n      let id = this.getInputID;\n      if (this.IDRandom) {\n        id += genNonDuplicateID();\n      }\n      return id;\n    },\n    isModelValue() {\n      return this.modelValue != undefined;\n    },\n    styleTxt() {\n      if (this.inputStyle) {\n        return inputStyle;\n      }\n      let style = {\n        \"max-width\": \"calc( 100% - 5px )\"\n      };\n      if (!!this.tooltip) {\n        style[\"max-width\"] = \"calc( 100% - 25px )\";\n      }\n      return style;\n    },\n    disableStyle() {\n      let style = {};\n      if (this.canSelect && this.readOnly) {\n        style[\"pointerEvents\"] = \"auto\";\n      }\n      return style;\n    }\n  },\n  methods: {\n    getFile() {\n      if (this.type === \"file\") {\n        return this.$refs.files.files;\n      }\n    },\n    clearFile() {\n      if (this.type === \"file\") {\n        this.$refs.files.value = \"\";\n      }\n    },\n    UUID() {\n      return genNonDuplicateID();\n    },\n    click() {\n      this.$emit('clickFunc');\n    },\n    inputKeyup(event) {\n      this.$emit('cickUpFunc', event);\n    }\n  }\n};","map":{"version":3,"names":["genNonDuplicateID","data","props","LabelVal","type","String","ID","input","Object","invalids","inputClass","inputStyle","readOnly","Boolean","required","tooltip","placeholder","IDRandom","maxlength","modelValue","Number","canSelect","emits","components","mounted","watch","newVal","oldVal","$emit","computed","getType","getInputClass","className","getInvalidsTxt","getLabelClass","getInputID","IDs","split","length","showLable","show","getID","id","isModelValue","undefined","styleTxt","style","disableStyle","methods","getFile","$refs","files","clearFile","value","UUID","click","inputKeyup","event"],"sources":["/Users/jeremylin/Documents/vue_test/test/src/components/Input.vue"],"sourcesContent":["<template>\r\n    <template v-if=\"showLable\" >\r\n        <template v-if=\" getType === 'file' || readOnly \" >\r\n            <span class = \"pl-2 d-inline-block input-text m-0\" v-if=\" !!LabelVal \" :class=\"getLabelClass\" v-bind:style=\"styleTxt\">\r\n                {{LabelVal}}\r\n            </span>\r\n        </template>\r\n        <template v-else>\r\n            <label class = \"pl-2 input-text  m-0\" :for=\"getID\" v-if=\" !!LabelVal \" :class=\"getLabelClass\" v-bind:style=\"styleTxt\">\r\n                {{LabelVal}}\r\n            </label>\r\n        </template>\r\n        <i v-if=\"!!tooltip\" class=\"fas fa-question-circle input-tooltip\" data-toggle=\"tooltip\" :title=\"tooltip\"/>\r\n    </template>\r\n    \r\n    <template v-if=\" getType === 'file' \" >\r\n        <input type=\"file\" ref=\"files\" :class=\"getInputClass\" :disabled=\"readOnly\" />\r\n    </template>\r\n    <template v-else-if=\" readOnly \" >\r\n        <div class=\"selectText disable input disabled\" :class=\"getInputClass\" v-bind:style=\"disableStyle\">\r\n            <template v-if=\"isModelValue\" >\r\n                {{ modelValue }}\r\n            </template>\r\n            <template v-else >\r\n                {{ input[getInputID] }}\r\n            </template>\r\n        </div>\r\n    </template>\r\n    <template v-else >\r\n        <template v-if=\" getType === 'text' || getType === 'number' || type === 'password' \" >\r\n            <template v-if=\"isModelValue\" >\r\n                <input :type=\"getType\" :name=\"getID\" :id = \"getID\" v-model=\"modelValue\" :class=\"getInputClass\" :placeholder = \"placeholder ? placeholder : '' \" :maxlength = \"maxlength\" @keyup=\"inputKeyup\">\r\n            </template>\r\n            <template v-else >\r\n                <input :type=\"getType\" :name=\"getID\" :id = \"getID\" v-model=\"input[getInputID]\" :class=\"getInputClass\" :placeholder = \"placeholder ? placeholder : '' \" :maxlength = \"maxlength\" @keyup=\"inputKeyup\">\r\n            </template>\r\n\r\n        </template>\r\n        <template v-else-if=\" getType === 'checkbox'\" >\r\n            <input type=\"checkbox\" @click=\"click\">\r\n        </template>\r\n    </template>\r\n    \r\n    <div v-if =\" invalids \" class=\"invalid-feedback\">\r\n        {{ getInvalidsTxt }}\r\n    </div>\r\n    \r\n</template>\r\n<script>\r\nimport { genNonDuplicateID } from \"@/utils/util\"\r\n\r\nexport default {\r\n\r\n\tdata(){\r\n\t\treturn {\t\t\r\n\t\t\t\r\n\t\t}\r\n\t},\r\n\tprops: {\r\n        //有值就會顯示標題(Label)\r\n        LabelVal : {\r\n        \ttype : String,\r\n        } ,\r\n        //必填\r\n        ID : {\r\n        \ttype : String,\r\n        },\r\n        //會抓input[ID]的值,雙向綁定\r\n        input : {\r\n            type : Object ,\r\n        },\r\n        //顯示錯誤值\r\n        invalids : {\r\n        \ttype : Object ,\r\n        },\r\n        // 目前:number/text\r\n        type : {\r\n        \ttype : String,\r\n        },\r\n        // input的class ,會全部替換,沒帶有預設CLASS\r\n        inputClass : {\r\n        \ttype : String,\r\n        },\r\n        // input的style ,會全部替換,沒帶有預設style\r\n        inputStyle : {\r\n            type : String,\r\n        },\r\n        //是否唯讀 true/false\r\n        readOnly : {\r\n            type : Boolean ,\r\n        },\r\n        required : {\r\n            type : Boolean ,\r\n        },\r\n        tooltip : {\r\n            type : String ,\r\n        },\r\n        placeholder : {\r\n            type : String ,\r\n        },\r\n        IDRandom : {\r\n            type : Boolean ,\r\n        },\r\n        maxlength : {\r\n            type : String ,\r\n        },\r\n        modelValue : {\r\n            type : [String, Number],\r\n        },\r\n        canSelect : {\r\n            type : Boolean ,\r\n        }\r\n    },\r\n    emits:[\"clickFunc\",\"update:modelValue\",\"cickUpFunc\"],\r\n    components : {\r\n\r\n\t},\r\n\tmounted() {\r\n\r\n    },\r\n    watch: {\r\n        modelValue (newVal, oldVal) {\r\n            this.$emit('update:modelValue', newVal )\r\n        },\r\n    },\r\n    computed: {\r\n    \tgetType () {\r\n    \t\tif( !!this.type ) {\r\n    \t\t\treturn this.type ;\r\n    \t\t} else {\r\n    \t\t\treturn \"text\";\r\n    \t\t}\r\n    \t},\r\n    \tgetInputClass () {\r\n    \t\tlet className ;\r\n    \t\tif( this.inputClass ) {\r\n    \t\t\tclassName = this.inputClass ;\r\n    \t\t} else {\r\n                if( this.type === \"file\" ) {\r\n                    className = \"form-control border-0\" ;\r\n                } else {\r\n                    className = \"form-control text-left  border-0\" ;\r\n                    if ( !this.readOnly ) {\r\n                        className += \" bg-white\" ;\r\n                    }\r\n                }\r\n    \t\t}\r\n    \t\tif( this.getInvalidsTxt != \"\" ) {\r\n    \t\t\tclassName += \" is-invalid\"\r\n    \t\t}\r\n    \t\treturn className ;\r\n    \t},\r\n        getLabelClass(){\r\n            if( this.required ) {\r\n                return 'required' ;\r\n            }\r\n        },\r\n    \tgetInputID(){\r\n    \t\tlet ID = this.ID ;\r\n            if( ID ) {\r\n                let IDs = ID.split(\".\");\r\n                if( IDs.length > 1 ) {\r\n                    ID = IDs[IDs.length-1];\r\n                }\r\n                return ID;\r\n            } else {\r\n                return genNonDuplicateID();\r\n            }\r\n    \t},\r\n    \tgetInvalidsTxt(){\r\n            let ID = this.getInputID ;\r\n    \t\tif( this.invalids && !!this.invalids[ID] ) {\r\n    \t\t\treturn this.invalids[ID] ;\r\n    \t\t} else {\r\n    \t\t\treturn \"\" ;\r\n    \t\t}\r\n    \t},\r\n        showLable(){\r\n            let show = !!this.LabelVal\r\n            return  show ;\r\n        },\r\n        getID(){\r\n            let id = this.getInputID ;\r\n            if( this.IDRandom ) {\r\n                id += genNonDuplicateID() ;\r\n            }\r\n            return id ;\r\n        },\r\n        isModelValue(){\r\n            return this.modelValue != undefined ;\r\n        },\r\n        styleTxt(){\r\n            if( this.inputStyle ) {\r\n                return inputStyle;\r\n            }\r\n            let style = {\r\n                \"max-width\" : \"calc( 100% - 5px )\" ,\r\n            }\r\n            if( !!this.tooltip ) {\r\n                style[\"max-width\"] = \"calc( 100% - 25px )\";\r\n            }\r\n\r\n            \r\n            return style ;\r\n        },\r\n        disableStyle(){\r\n            let style = {} ;\r\n            \r\n            if( this.canSelect && this.readOnly ) {\r\n                style[\"pointerEvents\"] = \"auto\";\r\n            } \r\n\r\n            return style ;\r\n        }\r\n    },\r\n\tmethods: {\r\n\t\tgetFile(){\r\n            if( this.type === \"file\" ) {\r\n                return this.$refs.files.files;\r\n            }\r\n        },\r\n        clearFile(){\r\n            if( this.type === \"file\" ) {\r\n                this.$refs.files.value = \"\" ;\r\n            }\r\n        },\r\n        UUID(){\r\n            return genNonDuplicateID();\r\n        },\r\n        click(){\r\n            this.$emit('clickFunc');\r\n        },\r\n        inputKeyup( event ){\r\n            this.$emit('cickUpFunc' , event );\r\n        }\r\n\t}\r\n}\t\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}