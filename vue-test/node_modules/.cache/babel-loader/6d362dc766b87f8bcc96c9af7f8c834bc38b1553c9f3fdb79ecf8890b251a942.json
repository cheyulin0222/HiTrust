{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createTextVNode as _createTextVNode, vModelDynamic as _vModelDynamic, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = [\"for\"];\nconst _hoisted_2 = [\"title\"];\nconst _hoisted_3 = [\"disabled\"];\nconst _hoisted_4 = [\"type\", \"name\", \"id\", \"placeholder\", \"maxlength\"];\nconst _hoisted_5 = [\"type\", \"name\", \"id\", \"placeholder\", \"maxlength\"];\nconst _hoisted_6 = {\n  key: 4,\n  class: \"invalid-feedback\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$options.showLable ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [$options.getType === 'file' || $props.readOnly ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [!!$props.LabelVal ? (_openBlock(), _createElementBlock(\"span\", {\n    key: 0,\n    class: _normalizeClass([\"pl-2 d-inline-block input-text m-0\", $options.getLabelClass]),\n    style: _normalizeStyle($options.styleTxt)\n  }, _toDisplayString($props.LabelVal), 7 /* TEXT, CLASS, STYLE */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [!!$props.LabelVal ? (_openBlock(), _createElementBlock(\"label\", {\n    key: 0,\n    class: _normalizeClass([\"pl-2 input-text m-0\", $options.getLabelClass]),\n    for: $options.getID,\n    style: _normalizeStyle($options.styleTxt)\n  }, _toDisplayString($props.LabelVal), 15 /* TEXT, CLASS, STYLE, PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)), !!$props.tooltip ? (_openBlock(), _createElementBlock(\"i\", {\n    key: 2,\n    class: \"fas fa-question-circle input-tooltip\",\n    \"data-toggle\": \"tooltip\",\n    title: $props.tooltip\n  }, null, 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $options.getType === 'file' ? (_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"file\",\n    ref: \"files\",\n    class: _normalizeClass($options.getInputClass),\n    disabled: $props.readOnly\n  }, null, 10 /* CLASS, PROPS */, _hoisted_3)) : $props.readOnly ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 2,\n    class: _normalizeClass([\"selectText disable input disabled\", $options.getInputClass]),\n    style: _normalizeStyle($options.disableStyle)\n  }, [$options.isModelValue ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createTextVNode(_toDisplayString($props.modelValue), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createTextVNode(_toDisplayString($props.input[$options.getInputID]), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */))], 6 /* CLASS, STYLE */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 3\n  }, [$options.getType === 'text' || $options.getType === 'number' || $props.type === 'password' ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [$options.isModelValue ? (_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    type: $options.getType,\n    name: $options.getID,\n    id: $options.getID,\n    class: _normalizeClass($options.getInputClass),\n    placeholder: $props.placeholder ? $props.placeholder : '',\n    maxlength: $props.maxlength,\n    onKeyup: _cache[0] || (_cache[0] = (...args) => $options.inputKeyup && $options.inputKeyup(...args))\n  }, null, 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_4)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: $options.getType,\n    name: $options.getID,\n    id: $options.getID,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $props.input[$options.getInputID] = $event),\n    class: _normalizeClass($options.getInputClass),\n    placeholder: $props.placeholder ? $props.placeholder : '',\n    maxlength: $props.maxlength,\n    onKeyup: _cache[2] || (_cache[2] = (...args) => $options.inputKeyup && $options.inputKeyup(...args))\n  }, null, 42 /* CLASS, PROPS, NEED_HYDRATION */, _hoisted_5)), [[_vModelDynamic, $props.input[$options.getInputID]]])], 64 /* STABLE_FRAGMENT */)) : $options.getType === 'checkbox' ? (_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"checkbox\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.click && $options.click(...args))\n  })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)), $props.invalids ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($options.getInvalidsTxt), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_Fragment","$options","showLable","getType","$props","readOnly","LabelVal","_normalizeClass","getLabelClass","style","_normalizeStyle","styleTxt","_createCommentVNode","for","getID","_hoisted_1","tooltip","title","_hoisted_2","type","ref","getInputClass","disabled","_hoisted_3","disableStyle","isModelValue","_createTextVNode","_toDisplayString","modelValue","input","getInputID","name","id","placeholder","maxlength","onKeyup","_cache","args","inputKeyup","_hoisted_4","$event","_hoisted_5","onClick","click","invalids","_hoisted_6","getInvalidsTxt"],"sources":["/Users/jeremylin/Documents/vue_test/test/src/components/Input.vue"],"sourcesContent":["<template>\r\n    <template v-if=\"showLable\" >\r\n        <template v-if=\" getType === 'file' || readOnly \" >\r\n            <span class = \"pl-2 d-inline-block input-text m-0\" v-if=\" !!LabelVal \" :class=\"getLabelClass\" v-bind:style=\"styleTxt\">\r\n                {{LabelVal}}\r\n            </span>\r\n        </template>\r\n        <template v-else>\r\n            <label class = \"pl-2 input-text  m-0\" :for=\"getID\" v-if=\" !!LabelVal \" :class=\"getLabelClass\" v-bind:style=\"styleTxt\">\r\n                {{LabelVal}}\r\n            </label>\r\n        </template>\r\n        <i v-if=\"!!tooltip\" class=\"fas fa-question-circle input-tooltip\" data-toggle=\"tooltip\" :title=\"tooltip\"/>\r\n    </template>\r\n    \r\n    <template v-if=\" getType === 'file' \" >\r\n        <input type=\"file\" ref=\"files\" :class=\"getInputClass\" :disabled=\"readOnly\" />\r\n    </template>\r\n    <template v-else-if=\" readOnly \" >\r\n        <div class=\"selectText disable input disabled\" :class=\"getInputClass\" v-bind:style=\"disableStyle\">\r\n            <template v-if=\"isModelValue\" >\r\n                {{ modelValue }}\r\n            </template>\r\n            <template v-else >\r\n                {{ input[getInputID] }}\r\n            </template>\r\n        </div>\r\n    </template>\r\n    <template v-else >\r\n        <template v-if=\" getType === 'text' || getType === 'number' || type === 'password' \" >\r\n            <template v-if=\"isModelValue\" >\r\n                <input :type=\"getType\" :name=\"getID\" :id = \"getID\" v-model=\"modelValue\" :class=\"getInputClass\" :placeholder = \"placeholder ? placeholder : '' \" :maxlength = \"maxlength\" @keyup=\"inputKeyup\">\r\n            </template>\r\n            <template v-else >\r\n                <input :type=\"getType\" :name=\"getID\" :id = \"getID\" v-model=\"input[getInputID]\" :class=\"getInputClass\" :placeholder = \"placeholder ? placeholder : '' \" :maxlength = \"maxlength\" @keyup=\"inputKeyup\">\r\n            </template>\r\n\r\n        </template>\r\n        <template v-else-if=\" getType === 'checkbox'\" >\r\n            <input type=\"checkbox\" @click=\"click\">\r\n        </template>\r\n    </template>\r\n    \r\n    <div v-if =\" invalids \" class=\"invalid-feedback\">\r\n        {{ getInvalidsTxt }}\r\n    </div>\r\n    \r\n</template>\r\n<script>\r\nimport { genNonDuplicateID } from \"@/utils/util\"\r\n\r\nexport default {\r\n\r\n\tdata(){\r\n\t\treturn {\t\t\r\n\t\t\t\r\n\t\t}\r\n\t},\r\n\tprops: {\r\n        //有值就會顯示標題(Label)\r\n        LabelVal : {\r\n        \ttype : String,\r\n        } ,\r\n        //必填\r\n        ID : {\r\n        \ttype : String,\r\n        },\r\n        //會抓input[ID]的值,雙向綁定\r\n        input : {\r\n            type : Object ,\r\n        },\r\n        //顯示錯誤值\r\n        invalids : {\r\n        \ttype : Object ,\r\n        },\r\n        // 目前:number/text\r\n        type : {\r\n        \ttype : String,\r\n        },\r\n        // input的class ,會全部替換,沒帶有預設CLASS\r\n        inputClass : {\r\n        \ttype : String,\r\n        },\r\n        // input的style ,會全部替換,沒帶有預設style\r\n        inputStyle : {\r\n            type : String,\r\n        },\r\n        //是否唯讀 true/false\r\n        readOnly : {\r\n            type : Boolean ,\r\n        },\r\n        required : {\r\n            type : Boolean ,\r\n        },\r\n        tooltip : {\r\n            type : String ,\r\n        },\r\n        placeholder : {\r\n            type : String ,\r\n        },\r\n        IDRandom : {\r\n            type : Boolean ,\r\n        },\r\n        maxlength : {\r\n            type : String ,\r\n        },\r\n        modelValue : {\r\n            type : [String, Number],\r\n        },\r\n        canSelect : {\r\n            type : Boolean ,\r\n        }\r\n    },\r\n    emits:[\"clickFunc\",\"update:modelValue\",\"cickUpFunc\"],\r\n    components : {\r\n\r\n\t},\r\n\tmounted() {\r\n\r\n    },\r\n    watch: {\r\n        modelValue (newVal, oldVal) {\r\n            this.$emit('update:modelValue', newVal )\r\n        },\r\n    },\r\n    computed: {\r\n    \tgetType () {\r\n    \t\tif( !!this.type ) {\r\n    \t\t\treturn this.type ;\r\n    \t\t} else {\r\n    \t\t\treturn \"text\";\r\n    \t\t}\r\n    \t},\r\n    \tgetInputClass () {\r\n    \t\tlet className ;\r\n    \t\tif( this.inputClass ) {\r\n    \t\t\tclassName = this.inputClass ;\r\n    \t\t} else {\r\n                if( this.type === \"file\" ) {\r\n                    className = \"form-control border-0\" ;\r\n                } else {\r\n                    className = \"form-control text-left  border-0\" ;\r\n                    if ( !this.readOnly ) {\r\n                        className += \" bg-white\" ;\r\n                    }\r\n                }\r\n    \t\t}\r\n    \t\tif( this.getInvalidsTxt != \"\" ) {\r\n    \t\t\tclassName += \" is-invalid\"\r\n    \t\t}\r\n    \t\treturn className ;\r\n    \t},\r\n        getLabelClass(){\r\n            if( this.required ) {\r\n                return 'required' ;\r\n            }\r\n        },\r\n    \tgetInputID(){\r\n    \t\tlet ID = this.ID ;\r\n            if( ID ) {\r\n                let IDs = ID.split(\".\");\r\n                if( IDs.length > 1 ) {\r\n                    ID = IDs[IDs.length-1];\r\n                }\r\n                return ID;\r\n            } else {\r\n                return genNonDuplicateID();\r\n            }\r\n    \t},\r\n    \tgetInvalidsTxt(){\r\n            let ID = this.getInputID ;\r\n    \t\tif( this.invalids && !!this.invalids[ID] ) {\r\n    \t\t\treturn this.invalids[ID] ;\r\n    \t\t} else {\r\n    \t\t\treturn \"\" ;\r\n    \t\t}\r\n    \t},\r\n        showLable(){\r\n            let show = !!this.LabelVal\r\n            return  show ;\r\n        },\r\n        getID(){\r\n            let id = this.getInputID ;\r\n            if( this.IDRandom ) {\r\n                id += genNonDuplicateID() ;\r\n            }\r\n            return id ;\r\n        },\r\n        isModelValue(){\r\n            return this.modelValue != undefined ;\r\n        },\r\n        styleTxt(){\r\n            if( this.inputStyle ) {\r\n                return inputStyle;\r\n            }\r\n            let style = {\r\n                \"max-width\" : \"calc( 100% - 5px )\" ,\r\n            }\r\n            if( !!this.tooltip ) {\r\n                style[\"max-width\"] = \"calc( 100% - 25px )\";\r\n            }\r\n\r\n            \r\n            return style ;\r\n        },\r\n        disableStyle(){\r\n            let style = {} ;\r\n            \r\n            if( this.canSelect && this.readOnly ) {\r\n                style[\"pointerEvents\"] = \"auto\";\r\n            } \r\n\r\n            return style ;\r\n        }\r\n    },\r\n\tmethods: {\r\n\t\tgetFile(){\r\n            if( this.type === \"file\" ) {\r\n                return this.$refs.files.files;\r\n            }\r\n        },\r\n        clearFile(){\r\n            if( this.type === \"file\" ) {\r\n                this.$refs.files.value = \"\" ;\r\n            }\r\n        },\r\n        UUID(){\r\n            return genNonDuplicateID();\r\n        },\r\n        click(){\r\n            this.$emit('clickFunc');\r\n        },\r\n        inputKeyup( event ){\r\n            this.$emit('cickUpFunc' , event );\r\n        }\r\n\t}\r\n}\t\r\n</script>"],"mappings":";mBAAA;mBAAA;mBAAA;mBAAA;mBAAA;;EAAAA,GAAA;EA2C4BC,KAAK,EAAC;;;uBA3ClCC,mBAAA,CAAAC,SAAA,SACoBC,QAAA,CAAAC,SAAS,I,cAAzBH,mBAAA,CAYWC,SAAA;IAbfH,GAAA;EAAA,IAEyBI,QAAA,CAAAE,OAAO,eAAeC,MAAA,CAAAC,QAAQ,I,cAA/CN,mBAAA,CAIWC,SAAA;IANnBH,GAAA;EAAA,I,EAGwEO,MAAA,CAAAE,QAAQ,I,cAApEP,mBAAA,CAEO;IALnBF,GAAA;IAGkBC,KAAK,EAHvBS,eAAA,EAG0B,oCAAoC,EAA6BN,QAAA,CAAAO,aAAa;IAASC,KAAK,EAHtHC,eAAA,CAGwHT,QAAA,CAAAU,QAAQ;sBAC9GP,MAAA,CAAAE,QAAQ,kCAJ1BM,mBAAA,e,8CAOQb,mBAAA,CAIWC,SAAA;IAXnBH,GAAA;EAAA,I,EAQwEO,MAAA,CAAAE,QAAQ,I,cAApEP,mBAAA,CAEQ;IAVpBF,GAAA;IAQmBC,KAAK,EARxBS,eAAA,EAQ2B,qBAAsB,EAA0CN,QAAA,CAAAO,aAAa;IAArDK,GAAG,EAAEZ,QAAA,CAAAa,KAAK;IAAoDL,KAAK,EARtHC,eAAA,CAQwHT,QAAA,CAAAU,QAAQ;sBAC9GP,MAAA,CAAAE,QAAQ,uCAT1BS,UAAA,KAAAH,mBAAA,e,gCAYmBR,MAAA,CAAAY,OAAO,I,cAAlBjB,mBAAA,CAAyG;IAZjHF,GAAA;IAY4BC,KAAK,EAAC,sCAAsC;IAAC,aAAW,EAAC,SAAS;IAAEmB,KAAK,EAAEb,MAAA,CAAAY;0BAZvGE,UAAA,KAAAN,mBAAA,e,+BAAAA,mBAAA,gBAeqBX,QAAA,CAAAE,OAAO,e,cACpBJ,mBAAA,CAA6E;IAhBrFF,GAAA;IAgBesB,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,OAAO;IAAEtB,KAAK,EAhB7CS,eAAA,CAgB+CN,QAAA,CAAAoB,aAAa;IAAGC,QAAQ,EAAElB,MAAA,CAAAC;kCAhBzEkB,UAAA,KAkB0BnB,MAAA,CAAAC,QAAQ,I,cAC1BN,mBAAA,CAOM;IA1BdF,GAAA;IAmBaC,KAAK,EAnBlBS,eAAA,EAmBmB,mCAAmC,EAASN,QAAA,CAAAoB,aAAa;IAASZ,KAAK,EAnB1FC,eAAA,CAmB4FT,QAAA,CAAAuB,YAAY;MAC5EvB,QAAA,CAAAwB,YAAY,I,cAA5B1B,mBAAA,CAEWC,SAAA;IAtBvBH,GAAA;EAAA,IAAA6B,gBAAA,CAAAC,gBAAA,CAqBmBvB,MAAA,CAAAwB,UAAU,iB,8CAEjB7B,mBAAA,CAEWC,SAAA;IAzBvBH,GAAA;EAAA,IAAA6B,gBAAA,CAAAC,gBAAA,CAwBmBvB,MAAA,CAAAyB,KAAK,CAAC5B,QAAA,CAAA6B,UAAU,kB,uEAI/B/B,mBAAA,CAaWC,SAAA;IAzCfH,GAAA;EAAA,IA6ByBI,QAAA,CAAAE,OAAO,eAAeF,QAAA,CAAAE,OAAO,iBAAiBC,MAAA,CAAAe,IAAI,mB,cAAnEpB,mBAAA,CAQWC,SAAA;IArCnBH,GAAA;EAAA,IA8B4BI,QAAA,CAAAwB,YAAY,I,cACxB1B,mBAAA,CAA6L;IA/B7MF,GAAA;IA+BwBsB,IAAI,EAAElB,QAAA,CAAAE,OAAO;IAAG4B,IAAI,EAAE9B,QAAA,CAAAa,KAAK;IAAGkB,EAAE,EAAI/B,QAAA,CAAAa,KAAK;IAAwBhB,KAAK,EA/B9FS,eAAA,CA+BgGN,QAAA,CAAAoB,aAAa;IAAGY,WAAW,EAAI7B,MAAA,CAAA6B,WAAW,GAAG7B,MAAA,CAAA6B,WAAW;IAASC,SAAS,EAAI9B,MAAA,CAAA8B,SAAS;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEpC,QAAA,CAAAqC,UAAA,IAAArC,QAAA,CAAAqC,UAAA,IAAAD,IAAA,CAAU;kDA/B3ME,UAAA,K,+BAkCgBxC,mBAAA,CAAoM;IAlCpNF,GAAA;IAkCwBsB,IAAI,EAAElB,QAAA,CAAAE,OAAO;IAAG4B,IAAI,EAAE9B,QAAA,CAAAa,KAAK;IAAGkB,EAAE,EAAI/B,QAAA,CAAAa,KAAK;IAlCjE,uBAAAsB,MAAA,QAAAA,MAAA,MAAAI,MAAA,IAkC4EpC,MAAA,CAAAyB,KAAK,CAAC5B,QAAA,CAAA6B,UAAU,IAAAU,MAAA;IAAI1C,KAAK,EAlCrGS,eAAA,CAkCuGN,QAAA,CAAAoB,aAAa;IAAGY,WAAW,EAAI7B,MAAA,CAAA6B,WAAW,GAAG7B,MAAA,CAAA6B,WAAW;IAASC,SAAS,EAAI9B,MAAA,CAAA8B,SAAS;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEpC,QAAA,CAAAqC,UAAA,IAAArC,QAAA,CAAAqC,UAAA,IAAAD,IAAA,CAAU;kDAlClNI,UAAA,K,iBAkC4ErC,MAAA,CAAAyB,KAAK,CAAC5B,QAAA,CAAA6B,UAAU,G,iCAI9D7B,QAAA,CAAAE,OAAO,mB,cACzBJ,mBAAA,CAAsC;IAvClDF,GAAA;IAuCmBsB,IAAI,EAAC,UAAU;IAAEuB,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEpC,QAAA,CAAA0C,KAAA,IAAA1C,QAAA,CAAA0C,KAAA,IAAAN,IAAA,CAAK;QAvChDzB,mBAAA,e,8BA2CiBR,MAAA,CAAAwC,QAAQ,I,cAArB7C,mBAAA,CAEM,OAFN8C,UAEM,EAAAlB,gBAAA,CADC1B,QAAA,CAAA6C,cAAc,oBA5CzBlC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}